
server
npm init -y
npm install json-server jsonwebtoken cors
pm install --save-dev nodemon
npm run dev

FRONT 
PAGINMA-PRICIPAL CUAL ES SU OBGETIVO
 APP PRINCIPAL - FUNCI√ìN RESUMIDA:
üéØ ES EL "CONTENEDOR PRINCIPAL"
3 funciones clave:

üö™ Recibir al usuario - Primera p√°gina que se carga
üîê Verificar si est√° logueado - Si no ‚Üí manda a login
üß≠ Cargar los microfrontends - Auth o Cuentas seg√∫n donde vaya

üñºÔ∏è LAYOUT FIJO:

Header con logo y usuario (siempre visible)
Men√∫ lateral (siempre visible)
√Årea central donde se cargan los microfrontends

üîÑ FLUJO:

Usuario llega ‚Üí Verifica login
Si no est√° logueado ‚Üí Carga mf-auth
Si est√° logueado ‚Üí Muestra dashboard
Usuario hace clic "Cuentas" ‚Üí Carga mf-cuentas
Header y men√∫ se mantienen, solo cambia el centro

üìã ANALOG√çA:
= Marco de una ventana

El marco siempre est√° ah√≠
El contenido del centro cambia

¬øClaro? La App Principal es el coordinador que mantiene el layout y decide qu√© microfrontend mostrar üöÄ


para corer webpack

actualizar angular.json

{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "aplicacion-principal": {
      "projectType": "application",
      "schematics": {},
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-architects/module-federation:build",
          "options": {
            "outputPath": "dist/aplicacion-principal",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.css"
            ],
            "scripts": [],
            "customWebpackConfig": {
              "path": "./webpack.config.js"
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "4kB",
                  "maximumError": "8kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-architects/module-federation:dev-server",
          "options": {
            "customWebpackConfig": {
              "path": "./webpack.config.js"
            },
            "port": 4200
          },
          "configurations": {
            "production": {
              "buildTarget": "aplicacion-principal:build:production"
            },
            "development": {
              "buildTarget": "aplicacion-principal:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.css"
            ],
            "scripts": []
          }
        }
      }
    }
  }
}


npm install @module-federation/webpack@2.5.1 --save-dev
npm install @angular-architects/module-federation@19 --save-dev
npm install webpack@5 --save-dev
npm list @angular-architects/module-federation

ng serve --port 4200 



